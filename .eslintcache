[{"C:\\Users\\Avinash\\fundoonotes\\src\\index.js":"1","C:\\Users\\Avinash\\fundoonotes\\src\\App.js":"2","C:\\Users\\Avinash\\fundoonotes\\src\\reportWebVitals.js":"3","C:\\Users\\Avinash\\fundoonotes\\src\\components\\login\\login.jsx":"4","C:\\Users\\Avinash\\fundoonotes\\src\\components\\register\\register.jsx":"5","C:\\Users\\Avinash\\fundoonotes\\src\\components\\resetpassword\\reset.jsx":"6","C:\\Users\\Avinash\\fundoonotes\\src\\services\\userservice.js":"7","C:\\Users\\Avinash\\fundoonotes\\src\\services\\axiosservice.js":"8"},{"size":550,"mtime":1612337664419,"results":"9","hashOfConfig":"10"},{"size":634,"mtime":1612699862391,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3936,"mtime":1612759683170,"results":"13","hashOfConfig":"10"},{"size":6981,"mtime":1612747700548,"results":"14","hashOfConfig":"10"},{"size":2634,"mtime":1612503315373,"results":"15","hashOfConfig":"10"},{"size":769,"mtime":1612748192038,"results":"16","hashOfConfig":"10"},{"size":374,"mtime":1612580868696,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1qjp5ds",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Avinash\\fundoonotes\\src\\index.js",[],["37","38"],"C:\\Users\\Avinash\\fundoonotes\\src\\App.js",["39"],"C:\\Users\\Avinash\\fundoonotes\\src\\reportWebVitals.js",[],"C:\\Users\\Avinash\\fundoonotes\\src\\components\\login\\login.jsx",["40","41"],"C:\\Users\\Avinash\\fundoonotes\\src\\components\\register\\register.jsx",["42","43"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './register.scss';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport registration from \"../../services/userservice\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      Rpassword: \"\",\r\n    };\r\n  }\r\n\r\n  handleFirstNameInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      firstName: event.target.value,\r\n    });\r\n  };\r\n  handleLastNameInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      lastName: event.target.value,\r\n    });\r\n  };\r\n  handleEmailInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n  handlePasswordInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n  handleReapetPasswordInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      Rpassword: event.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"working handle submit\");\r\n    let userData = {\r\n      email: this.state.email,\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      password: this.state.password,\r\n      service: \"advance\",\r\n    };\r\n    console.log(userData);\r\n    registration(userData)\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  signIn=()=>{\r\n    window.location.href=\"http://localhost:3000/login\"\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container1-body\">\r\n          <div>\r\n            <Typography\r\n              className=\"app_name1\"\r\n              variant=\"h5\"\r\n              color=\"textSecondary\"\r\n            >\r\n              <span style={{ color: \"#0606f8\" }}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n            </Typography>\r\n          </div>\r\n          <div className=\"text\">\r\n            <h4>Create your Fundoo Account</h4>\r\n          </div>\r\n          <Form className=\"form\">\r\n            <Row>\r\n              <Col className=\"fname\">\r\n                <TextField\r\n                  // value={this.state.firstName}\r\n                  name=\"firstName\"\r\n                  id=\"outlined-textarea1\"\r\n                  label=\"FirstName\"\r\n                  placeholder=\"\"\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  margin=\"dense\"\r\n                  onChange={this.handleFirstNameInput}\r\n                />\r\n                {/* <Form.Control placeholder=\"First name\" /> */}\r\n              </Col>\r\n\r\n              <Col className=\"lname\">\r\n                <TextField\r\n                  // value={this.state.lastName}\r\n                  name=\"lastName\"\r\n                  id=\"outlined-textarea1\"\r\n                  label=\"LastName\"\r\n                  placeholder=\"\"\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  // type=\"text\"\r\n                  size=\"small\"\r\n                  margin=\"dense\"\r\n                  onChange={this.handleLastNameInput}\r\n                />\r\n                {/* <Form.Control placeholder=\"Last name\" /> */}\r\n              </Col>\r\n            </Row>\r\n            <div className=\"user\">\r\n              <TextField\r\n                // value={this.state.email}\r\n                name=\"email\"\r\n                id=\"outlined-textarea2\"\r\n                label=\"Username\"\r\n                placeholder=\"\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                // color=\"blue\"\r\n                helperText=\"You can use letters,numbers & symbols\"\r\n                // size=\"medium\"\r\n                margin=\"dense\"\r\n                onChange={this.handleEmailInput}\r\n              />\r\n              <span class=\"gmail\">@gmail.com</span>\r\n            </div>\r\n            <div className=\"line1\">\r\n              <Button variant=\"link\">\r\n                Use my current email address instead\r\n              </Button>\r\n            </div>\r\n            <div className=\"cnfmpass\">\r\n              <Row>\r\n                <Col className=\"pass1\">\r\n                  <TextField\r\n                    // value={this.state.password}\r\n                    name=\"password\"\r\n                    id=\"outlined-textarea3\"\r\n                    label=\"Password\"\r\n                    placeholder=\"\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    size=\"small\"\r\n                    margin=\"dense\"\r\n                    onChange={this.handlePasswordInput}\r\n                  />\r\n                  {/* <Form.Control placeholder=\"First name\" /> */}\r\n                </Col>\r\n\r\n                <Col className=\"cnfm1\">\r\n                  <TextField\r\n                    id=\"outlined-textarea3\"\r\n                    label=\"Confirm\"\r\n                    placeholder=\"\"\r\n                    name=\"\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    size=\"small\"\r\n                    margin=\"dense\"\r\n                    onchange={this.handleReapetPasswordInput}\r\n                  />\r\n                  {/* <Form.Control placeholder=\"Last name\" /> */}\r\n                </Col>\r\n              </Row>\r\n              <div className=\"hint\">\r\n                Use 8 or more characters with a mix of letters, numbers &\r\n                symbols{\" \"}\r\n              </div>\r\n            </div>\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Show password\" />\r\n            </Form.Group>\r\n            <Button className=\"link2\" variant=\"link\"  onClick={this.signIn}>\r\n              Sign in instead\r\n              \r\n            </Button>\r\n            <Button\r\n            onClick={this.handleRegister}\r\n              className=\"but2\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Next\r\n            </Button>\r\n            <div className=\"accnt\">\r\n              <img />\r\n            </div>\r\n            {/* <div>One account. All of Google working for you.</div> */}\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;\r\n","C:\\Users\\Avinash\\fundoonotes\\src\\components\\resetpassword\\reset.jsx",["44","45","46"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HTMLComment from \"react-html-comment\";\r\nimport \"./reset.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Reset() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container classname=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n          <span style={{ color: \"#0606f8\" }}>F</span>\r\n          <span style={{ color: \"#d10303\" }}>u</span>\r\n          <span style={{ color: \"#f0b000\" }}>n</span>\r\n          <span style={{ color: \"#0606f8\" }}>d</span>\r\n          <span style={{ color: \"green\" }}>o</span>\r\n          <span style={{ color: \"#d10303\" }}>o</span>\r\n        </Typography>\r\n        <div>\r\n          <h3>Reset Password</h3>\r\n        </div>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"old-password\"\r\n            label=\"Old Password\"\r\n            name=\"email\"\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"New-Password\"\r\n            type=\"password\"\r\n            id=\"new-password\"\r\n          />\r\n\r\n          <Grid container spacing={12}>\r\n            <Grid item item xs={6} sm={6} classname=\"submit\">\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Avinash\\fundoonotes\\src\\services\\userservice.js",[],"C:\\Users\\Avinash\\fundoonotes\\src\\services\\axiosservice.js",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":47,"nodeType":"54","messageId":"55","endLine":2,"endColumn":51},{"ruleId":"56","severity":1,"message":"57","line":116,"column":24,"nodeType":"58","endLine":116,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":121,"column":24,"nodeType":"58","endLine":121,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":162,"column":21,"nodeType":"58","endLine":162,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":210,"column":15,"nodeType":"61","endLine":210,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":12},{"ruleId":"52","severity":1,"message":"62","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":75,"column":24,"nodeType":"58","endLine":75,"endColumn":28},{"ruleId":"52","severity":1,"message":"63","line":3,"column":7,"nodeType":"54","messageId":"55","endLine":3,"endColumn":14},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'HTMLComment' is defined but never used.","'baseUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]